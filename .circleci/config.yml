version: 2.1

jobs:
  lint:
    docker:
      - image: cimg/android:2025.02.1
    steps:
      - checkout
      - run:
          name: Setup environment
          command: chmod +x setup_environment && ./setup_environment
      - restore_cache:
          key: cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
      - run:
          name: Lint Release Only
          command: ./gradlew lintRelease
      - store_artifacts:
          path: app/build/reports

  # Unit Test
  unit-test:
    docker:
      - image: cimg/android:2025.02.1
    steps:
      - checkout
      - run:
          name: Setup environment
          command: chmod +x setup_environment && ./setup_environment
      - restore_cache:
          key: cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
      - run:
          name: Run Unit Tests
          command: ./gradlew testReleaseUnitTest
      - store_test_results:
          path: app/build/test-results
      - save_cache:
          key: cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
          paths:
            - ~/.gradle/caches

  test-android:
    docker:
      - image: cimg/android:2025.02.1
    steps:
      - checkout
      - run:
          name: Setup environment
          command: chmod +x setup_environment && ./setup_environment
      - run:
          name: Start Emulator
          command: |
            sdkmanager "system-images;android-30;google_apis;x86_64"
            echo "no" | avdmanager create avd -n testAVD -k "system-images;android-30;google_apis;x86_64"
            nohup emulator -avd testAVD -no-audio -no-window &
      - run:
          name: Wait for Emulator
          command: |
            sleep 60
            adb shell input keyevent 82
      - run:
          name: Run Instrumented Tests
          command: ./gradlew connectedReleaseAndroidTest
      - store_test_results:
          path: app/build/outputs/androidTest-results

  firebase-test:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Install Firebase CLI
          command: curl -sL https://firebase.tools | bash
      - run:
          name: Firebase Test Lab - Run Matrix
          command: |
            gcloud auth activate-service-account --key-file=app/dev-service-account.json
            gcloud --quiet config set project scoreboardbrlk
            gcloud firebase test android run \
              --type instrumentation \
              --app app/build/outputs/bundle/release/app-release.aab \
              --test app/build/outputs/bundle/release/app-release.aab \
              --device model=Pixel2,version=30,locale=en,orientation=portrait \
              --device model=Nexus6,version=28,locale=en,orientation=landscape \
              --timeout 15m

  build-release:
    docker:
      - image: cimg/android:2025.02.1
    steps:
      - checkout
      - run:
          name: Setup environment
          command: chmod +x setup_environment && ./setup_environment
      - restore_cache:
          key: cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
      - run:
          name: Lint Release Only
          command: ./gradlew lintRelease
      - run:
          name: Build Release AAB
          command: ./gradlew bundleRelease
      - run:
          name: Build Release APK
          command: ./gradlew assembleRelease
      - save_cache:
          key: cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
          paths:
            - ~/.gradle/caches
      - persist_to_workspace:
          root: app/build
          paths:
            - outputs/apk/release
            - outputs/bundle/release
            - outputs/bundle/*.aab

  deploy:
    docker:
      - image: cimg/android:2025.02.1
    steps:
      - checkout
      - attach_workspace:
          at: app
      - run:
          name: Setup environment
          command: chmod +x setup_environment && ./setup_environment && tree -L 5
      - run:
          name: Upload to Google Play
          command: ./gradlew publishReleaseBundle
      - store_artifacts:
          path: workspace

workflows:
  test-and-deploy:
    jobs:
      - lint
      - unit-test
#      - test-android
#      - firebase-test
      - build-release:
          requires:
            - unit-test
#            - test-android
#            - firebase-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/  # Deploy only if there's a tag in format vX.Y.Z
      - deploy:
          requires:
            - build-release
