name: CI

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  ADMOB_APP_ID: ${{ secrets.ADMOB_APP_ID }}
  INTERSTITIAL_AD_UNIT_ID: ${{ secrets.INTERSTITIAL_AD_UNIT_ID }}
  GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
  DEV_SERVICE_ACCOUNT: ${{ secrets.DEV_SERVICE_ACCOUNT }}
  RELEASE_KEY: ${{ secrets.RELEASE_KEY }}
  ORG_GRADLE_PROJECT_RELEASE_KEY_ALIAS: ${{ secrets.ORG_GRADLE_PROJECT_RELEASE_KEY_ALIAS }}
  ORG_GRADLE_PROJECT_RELEASE_KEY_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_RELEASE_KEY_PASSWORD }}
  ORG_GRADLE_PROJECT_RELEASE_STORE_FILE: ${{ secrets.ORG_GRADLE_PROJECT_RELEASE_STORE_FILE }}
  ORG_GRADLE_PROJECT_RELEASE_STORE_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_RELEASE_STORE_PASSWORD }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lint check
        run: ./gradlew lint

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Debug
        run: echo $GITHUB_CONTEXT

      - name: Setup Environment
        run: |
          chmod +x setup_environment
          ./setup_environment

      - name: Run Unit Tests
        run: ./gradlew testReleaseUnitTest

      - name: Store test results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: app/build/reports/tests

  integration-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [28, 29]
        target: [default, google_apis]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          chmod +x setup_environment
          ./setup_environment

      - name: Debug
        run: echo $GITHUB_CONTEXT

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedCheck

      - name: Store test results
        uses: actions/upload-artifact@v4
        with:
          name: instrumented-test-report
          path: app/build/reports/androidTests

  build:
    runs-on: ubuntu-latest
    needs: [lint, unit-test, integration-test]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          chmod +x setup_environment
          ./setup_environment

      - name: Debug
        run: echo $GITHUB_CONTEXT

      - name: Generate release APK
        run: ./gradlew assembleRelease

      - name: Generate release AAB
        run: ./gradlew bundleRelease

      - name: Store AAB and APK files
        uses: actions/upload-artifact@v4
        with:
          path: |
            app/build/outputs/bundle/release/*.aab
            app/build/outputs/apks/release/*.apk
