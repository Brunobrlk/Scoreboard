name: Manual Deploy to Play Store

on:
  workflow_dispatch:

env:
  GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
  DEV_SERVICE_ACCOUNT: ${{ secrets.DEV_SERVICE_ACCOUNT }}
  RELEASE_KEY: ${{ secrets.RELEASE_KEY }}
  GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
  LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}

jobs:
  build-apk:
    runs-on: ubuntu-latest
    # needs: [lint, unit-test, integration-test]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          chmod +x setup_environment
          ./setup_environment

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate release APK
        run: ./gradlew assembleRelease

      - name: Store AAB and APK files
        uses: actions/upload-artifact@v4
        with:
          name: apk-artifacts
          path: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/mapping/release/mapping.txt
            app/build/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/lib
  # deploy-playstore:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: dawidd6/action-download-artifact@v8
  #       with:
  #         workflow: build-and-test.yml
  #         name: release-artifacts

  #     - name: Get Version
  #       id: versionName
  #       run: echo VERSION_NAME="v$(grep 'versionName =' build.gradle.kts | head -1 | awk -F\" '{ print $2 }')" >> $GITHUB_OUTPUT

  #     - name: Deploy to Play Store
  #       uses: r0adkll/upload-google-play@v1
  #       with:
  #         serviceAccountJson: app/dev-service-account.json
  #         releaseName: ${{ steps.versionName.outputs.VERSION_NAME }}
  #         packageName: com.bgbrlk.scoreboardbrlk
  #         releaseFiles: outputs/bundle/release/*.aab
  #         track: internal
  #         status: completed
  #         whatsNewDirectory: distribution/whatsnew
  #         mappingFile: outputs/mapping/release/mapping.txt
  #         debugSymbols: intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/lib

  deploy-amazon-appstore:
    runs-on: ubuntu-latest
    needs: build-apk
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: apk-artifacts

      - name: Get APK name
        id: get_apk_name
        run: |
          APK_PATH=$(ls outputs/apk/release/*.apk | head -1)
          echo "APK_NAME=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Debug
        run: |
          sudo apt-get install tree
          tree
          echo $PATH_APK

      - name: Upload to Amazon App Store
        uses: AmeyaJain-25/amazon-appstore-app-upload@v1.0.0
        with:
          client_id: ${{secrets.AMAZON_APPSTORE_CLIENT_ID}}
          client_secret: ${{secrets.AMAZON_APPSTORE_CLIENT_SECRET}}
          app_id: ${{ secrets.AMAZON_APPSTORE_APP_ID }}
          apk_release_file: ${{ steps.get_apk_name.outputs.APK_NAME }}

